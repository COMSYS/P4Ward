syntax = "proto3";

package authentication.access;

service AuthenticationAccess {
    // Identify the user and fetch its current attributes 
    rpc IdentifyUser(IdentifyUserRequest) returns (IdentifyUserResponse);
    
    // Perform password authentication
    rpc PasswordAuthentication(PasswordAuthenticationRequest) returns (PasswordAuthenticationResponse);

    // Perform challenge authentication
    rpc ChallengeAuthentication(ChallengeAuthenticationRequest) returns  (ChallengeAuthenticationResponse);

    // Perform remote authenticatino
    rpc RemoteAuthentication(RemoteAuthenticationRequest) returns (RemoteAuthenticationResponse);
    rpc RemoteAuthenticationCheck(RemoteAuthenticationCheckRequest) returns (RemoteAuthenticationCheckResponse);
}

// Authentication type (authentication procedure and algorithm)
enum AuthenticationType {
    // EAP MD5 authentication
    EAP_MD5 = 0;

    // EAP One-Time Password (OTP) authentication using different hash algorithms
    EAP_OTP_MD5 = 1;
    EAP_OTP_SHA1 = 2;
    EAP_OTP_SHA2 = 3;
    EAP_OTP_SHA3 = 4;
}

// Identify User
message IdentifyUserRequest {
    string Name = 1;
}
message IdentifyUserResponse {
    AuthenticationType Type = 1;
    string ProfileUrl = 2;
    string IpAddress = 3;
    map<string, string> Attributes = 4;
}

// Password Authentication
// The authentication server only send the user password allowing
// the router to perform the authentication.

message PasswordAuthenticationRequest {
    string Name = 1;
}
message PasswordAuthenticationResponse {
    string Password = 1;
}

// -------- Challenge Authentication --------
// The authentication challenge is generated by the authentication server and
// the authentication is performed by the router.

message ChallengeAuthenticationRequest {
    string Name = 1;
}
message ChallengeAuthenticationResponse {
    oneof Type {
        ChallengeMD5 MD5 = 1;
        ChallengeOTP OTP = 2;
    }
}

message ChallengeMD5 {
    bytes Challenge = 1; // Challenge sent to the device
    bytes Value = 2; // Expected value
}

message ChallengeOTP {
    string Seed = 1; // OTP seed
    bytes Primer = 2; // OTP chain primer
}

// -------- Remote Authentication --------
// The authentication is performed by the authentication server.
// Note: We currently only support EAP MD5 for remote authentication

message RemoteAuthenticationRequest {
    string Name = 1;
}
message RemoteAuthenticationResponse { 
    oneof Type {
        RemoteMD5 MD5 = 1;
    }
}

message RemoteMD5 {
    bytes Challenge = 1; // Challenge sent to the device
}

message RemoteAuthenticationCheckRequest {
    string Name = 1;
    oneof Type {
        RemoteMD5Check MD5 = 2;
    }
}
message RemoteAuthenticationCheckResponse { 
    bool Result = 1;
}

message RemoteMD5Check {
    bytes Value = 1; // Expected value
}